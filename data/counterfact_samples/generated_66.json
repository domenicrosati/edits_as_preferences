{"case_id": 9405, "pararel_idx": 5825, "requested_rewrite": {"prompt": "{}, a product created by", "relation_id": "P178", "target_new": {"str": "Microsoft", "id": "Q2283"}, "target_true": {"str": "Adobe", "id": "Q11463"}, "subject": "MXML"}, "paraphrase_prompts": ["She changed her party affiliation from Lakas to Nacionalista. MXML, developed by", "From \"The Province of Angola.\" MXML was a product of"], "neighborhood_prompts": ["Adobe Dreamweaver is developed by", "Adobe Dreamweaver, developed by", "Adobe Dreamweaver, created by", "Adobe AIR, a product created by", "Adobe Creative Suite is developed by", "Adobe PageMaker is developed by", "Adobe After Effects was created by", "Adobe PageMaker is created by", "Adobe Bridge was a product of", "PostScript, a product manufactured by"], "attribute_prompts": ["Windows Me is a product of", "Windows Me is developed by", "Windows 2.0 was a product of", "JScript, a product developed by", "Windows 9x, a product manufactured by", "Windows Me was created by", "Windows 2000 is created by", "ASP.NET MVC Framework was created by", "Windows NT was created by", "Xenix is created by"], "generation_prompts": ["The development of MXML is overseen by", "The development of MXML is overseen by", "MXML is sold by", "MXML is my favorite product out of everything created by", "MXML is my favorite product out of everything created by", "MXML is my favorite product out of everything created by", "The development of MXML is overseen by", "The development of MXML is overseen by", "MXML is sold by", "The development of MXML is overseen by"], "id": "ded54c6dd3b3b7fb9252b428770a2454", "coupled_prompts_and_properties": {"subject_entity": {"properties": ["developer", "based on"], "coupled_prompt": "Write an essay about MXML\nInclude the following information:\n- developer\n- based on", "ground_truth": {"developer": ["Adobe"], "based on": ["Extensible Markup Language"]}, "entity": "MXML", "entity_id": "Q1196084"}, "coupled_entities": [{"entity": "Adobe Flex Builder 3", "coupled_prompt": "Write an essay about Adobe Flex Builder 3\n    Include the following information:\n- writable file format\n- readable file format\n- developer", "mutual_properties": [], "subject_as_object": ["writable file format", "readable file format"], "target_true_as_object": [], "overlap_properties": ["developer"], "original_property_of_subject_as_object": [], "overlapping_ground_truth": {"developer": ["Adobe"], "readable file format": ["ZIP", "Small Web Format", "ShockWave Component", "MXML", "ActionScript file format", "Cascading Style Sheets"], "writable file format": ["MXML", "ActionScript file format", "Cascading Style Sheets", "ZIP"]}, "not_overlapping_ground_truth": {"depends on software": ["Java Runtime Environment", "Adobe Flash Player"], "language of work or name": ["English", "Japanese"]}, "additional_properties": ["depends on software", "language of work or name"], "entity_id": "Q116875452"}], "coupled_properties_count": 3}, "subject_prompt_600": ["MXML 3 support for XMLHttpRequest\n\nThe new version 2.0.2 supports XMLHttpRequest and provides full support for the XMLHttpRequest interface. If you are using XMLHttpRequest in an MXML document, you do not need to provide a separate handler for this new API. Instead, your handlers can simply accept the XmlHttpRequest object as a parameter, and use it for their requests. If you are using XMLHttpRequest with HTML forms, however, you must add additional HTML forms to your application.\n\nImportant: To improve performance, XAML controls that consume XMLHttpRequests should create their own XHR objects, rather than embedding them within other XAML elements. If you attempt to embed a XHR object within another XAML element, the XAML parser may be unable to resolve the URL from the XHR object. For more information, see Adding XQuery Objects to Forms.\n\nSupport for JSON for MXML\n\nXMLHttpRequest is now available in the Microsoft.AspNetCore.Mvc.Web.Server package. This means that your.NET application can request data from an HTTP server and render the response as XML, or JSON, directly into the HTML output page for the same user. The XMLHttpRequest method (using Microsoft.AspNetCore.Http) works seamlessly with the new JSON model. You can also read and write JSON data, including creating new forms and templates that will support this data model. This is especially useful when you are working with large data sets to build complex web applications. For example, if you have an enterprise-grade website that hosts several different forms that allow users to upload files and save them elsewhere, you can save time by building custom forms that allow users to upload data to the server, then use a template that generates the form data, and then save those forms.\n\nXMLHttpRequest also works well with the RESTful service WebAPI. The first step is to configure WebAPI so that it accepts XMLHttpRequests. In WebAPI Console, select Request Type -> Accept API Endpoints and then specify XMLHttpRequest as the type of the endpoint.\n\nAfter this is completed, you can start building RESTful resources that can respond to an XMLHTTPRequest. Web APIs can receive incoming XML requests and use them to render HTML content into responses.\n\nFor a comprehensive list of the WebAPI capabilities in the new release, see API Overview.\n\nNew Forms Toolkit feature\n\nForms now has a new feature called \"Forms Builder\" which allows you to easily build forms that accept XMLHttpRequests and that have a UI for manipulating the XAML objects contained within the XMLHTTPRequest. For example, the following markup displays a simple form which accepts JSON data and then uses it to render a response HTML page.\n\n<Html> <StackPanel Margin=\"10\" Background=\"Silver\">"], "coupled_prompt_600": ["Adobe Flex Builder 3 (MXF) is an XML-based data management engine for creating HTML 5, Web Forms and XHTML websites. It can also be used in an app or application built with XAML.\n\nIf you are using XAML to build a website then this is very likely already installed on your computer. If you are not using XAML but a custom framework then it may have been installed as part of the Windows Runtime Component. You should check that if it has been installed by visiting about:components.\n\nSee the Microsoft documentation.\n\nIt appears that the current version is 3.0.3, which was released in March 2015. The following information was gathered from http://developer.microsoft.com/visualstudio/docs/xaml/xaml/v3_0_3/documentation/latest/environments/xaml.html\n\nNote: This is based on reports that indicate that there are some known issues. Please contact the Adobe Support Service Center if you experience any issues during installation/use."]}